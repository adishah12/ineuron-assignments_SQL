SQL Questoons set-1

Q1. Query all columns for all American cities in the CITY table with populations larger than 100000.
The CountryCode for America is USA.
ANS - SELECT * FROM CITY WHERE COUNTRYCODE='USA' AND POPULATION>100000;

Q2. Query the NAME field for all American cities in the CITY table with populations larger than 120000.
The CountryCode for America is USA.
ANS - SELECT NAME FROM CITY WHERE COUNTRYCODE='USA' AND POPULATION>120000;

Q3. Query all columns (attributes) for every row in the CITY table.
ANS - SELECT * FROM CITY;

Q4. Query all columns for a city in CITY with the ID 1661.
ANS - SELECT * FROM CITY WHERE ID=1661;

Q5. Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is JPN.
ANS - SELECT * FROM CITY WHERE COUNTRYCODE='JPN';

Q6. Query the names of all the Japanese cities in the CITY table. The COUNTRYCODE for Japan is JPN.
ANS - SELECT NAME FROM CITY WHERE COUNTRYCODE='JPN';

Q7. Query a list of CITY and STATE from the STATION table.
ANS - SELECT CITY, STATE FROM STATIONDATA;

Q8. Query a list of CITY names from STATION for cities that have an even ID number. Print the results
in any order, but exclude duplicates from the answer.
ANS - SELECT DISTINCT ID, CITY FROM STATIONDATA WHERE ID%2=0;

Q9. Find the difference between the total number of CITY entries in the table and the number of
distinct CITY entries in the table.
ANS - SELECT (COUNT(city) - COUNT(DISTINCT city)) 
AS difference FROM STATIONDATA;

Q10. Query the two cities in STATION with the shortest and longest CITY names, as well as their
respective lengths (i.e.: number of characters in the name). If there is more than one smallest or
largest city, choose the one that comes first when ordered alphabetically.
ANS - ( select CITY,
char_length(CITY) as len_city  
 from STATIONDATA  
where char_length(CITY)=(select char_length(CITY)  
from STATIONDATA
order by char_length(CITY) LIMIT 1)  
 Order by CITY LIMIT 1)  
UNION ALL  
(select CITY,
char_length(CITY) as len_city  
 from STATIONDATA  
where char_length(CITY)=(select char_length(CITY)  
from STATIONDATA
order by char_length(CITY) DESC LIMIT 1)  
 Order by CITY DESC LIMIT 1)  
 ORDER BY char_length(CITY);
 
Q11. Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result
cannot contain duplicates.
ANS - SELECT DISTINCT(CITY) FROM STATIONDATA WHERE CITY LIKE'A%'
OR CITY LIKE'E%'
OR CITY LIKE'I%'
OR CITY LIKE'O%'
OR CITY LIKE'U%' ORDER BY CITY;

Q12. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot
contain duplicates.
ANS - SELECT DISTINCT(CITY) FROM STATIONDATA WHERE CITY LIKE'%A'
OR CITY LIKE'%E'
OR CITY LIKE'%I'
OR CITY LIKE'%O'
OR CITY LIKE'%U' ORDER BY CITY;

Q13. Query the list of CITY names from STATION that do not start with vowels. Your result cannot
contain duplicates.
ANS - SELECT DISTINCT(CITY) FROM STATIONDATA WHERE CITY NOT LIKE'A%'
OR CITY NOT LIKE'E%'
OR CITY NOT LIKE'I%'
OR CITY NOT LIKE'O%'
OR CITY NOT LIKE'U%';

Q14. Query the list of CITY names from STATION that do not end with vowels. Your result cannot
contain duplicates.
ANS - SELECT DISTINCT(CITY) FROM STATIONDATA WHERE CITY NOT LIKE'%A'
OR CITY NOT LIKE'%E'
OR CITY NOT LIKE'%I'
OR CITY NOT LIKE'%O'
OR CITY NOT LIKE'%U';

Q15. Query the list of CITY names from STATION that either do not start with vowels or do not end
with vowels. Your result cannot contain duplicates.
ANS - SELECT DISTINCT(CITY) FROM STATIONDATA WHERE CITY NOT LIKE'A%A'
OR CITY NOT LIKE'E%E'
OR CITY NOT LIKE'I%I'
OR CITY NOT LIKE'O%O'
OR CITY NOT LIKE'U%U';

Q16. Query the list of CITY names from STATION that do not start with vowels and do not end with
vowels. Your result cannot contain duplicates.
ANS - SELECT DISTINCT(CITY) FROM STATIONDATA WHERE CITY NOT LIKE'A%A'
OR CITY NOT LIKE'E%E'
OR CITY NOT LIKE'I%I'
OR CITY NOT LIKE'O%O'
OR CITY NOT LIKE'U%U';
